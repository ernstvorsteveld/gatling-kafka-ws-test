plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.2'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'io.gatling.gradle' version '3.11.5.2'
}

group = 'com.sternitc.kafka'
version = '0.0.1-SNAPSHOT'

gatling {
//	logLevel = 'WARN' // logback root level
//	logHttp = 'NONE' // set to 'ALL' for all HTTP traffic in TRACE, 'FAILURES' for failed HTTP traffic in DEBUG
	enterprise {
		// Enterprise Cloud (https://cloud.gatling.io/) configuration reference: https://gatling.io/docs/gatling/reference/current/extensions/gradle_plugin/#working-with-gatling-enterprise-cloud
		// Enterprise Self-Hosted configuration reference: https://gatling.io/docs/gatling/reference/current/extensions/gradle_plugin/#working-with-gatling-enterprise-self-hosted
	}
}

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation ('com.github.javafaker:javafaker:1.0.2') { exclude module: 'snakeyaml' }
	implementation 'org.yaml:snakeyaml:2.2'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	gatlingImplementation 'org.springframework.boot:spring-boot-starter'
	gatlingImplementation ('com.github.javafaker:javafaker:1.0.2') { exclude module: 'snakeyaml' }
	gatlingImplementation 'org.yaml:snakeyaml:2.2'
}

tasks.named('test') {
	useJUnitPlatform()
}

sourceSets {
    gatling {
		compileClasspath += sourceSets.main.output
		runtimeClasspath += sourceSets.main.output
		java {
			srcDirs = ["src/main/gatling/simulations"]
		}
    }
}

task printSourceSetInformation(){
	doLast{
		sourceSets.each { srcSet ->
			println "["+srcSet.name+"]"
			print "-->Source directories: "+srcSet.allJava.srcDirs+"\n"
			print "-->Output directories: "+srcSet.output.classesDirs.files+"\n"
			print "-->Compile classpath: " + srcSet.compileClasspath + "\n"
			println ""
		}
	}
}